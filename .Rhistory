row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
x_list[[2]]
chisq.test(df3)
chisq.test(df3, correct = FALSE)
chisq.test(df3, correct = FALSE).X-squared
chisq.test(df3, correct = FALSE)
chisq.test(df3, correct = FALSE)$statistic
chisq.test(df3, correct = FALSE)$statistic * 2
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq)
abline(v = t_0, col = "purple", lwd = 2)
axis(1, t_0, col.axis = "purple")
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 3)
hist(rnd.chisq)
abline(v = t_0, col = "purple", lwd = 2)
axis(1, t_0, col.axis = "purple")
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq)
abline(v = t_0, col = "purple", lwd = 2)
axis(1, t_0, col.axis = "purple")
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq)
abline(v = t_0, col = "purple", lwd = 1)
axis(1, t_0, col.axis = "purple")
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq)
abline(v = t_0, col = "purple", lwd = 1)
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq)
labs(x = "Test Statistic")
abline(v = t_0, col = "purple", lwd = 1)
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq)
labs(x = "Test Statistic")
abline(v = t_0, col = "purple", lwd = 2)
---
title: "DATA2x02 Survey Report"
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq)
labs(x = "Test Statistic")
abline(v = t_0, col = "purple", lwd = 4)
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq, xlab = "Test Statistic")
abline(v = t_0, col = "purple", lwd = 4)
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq, xlab = "Test Statistic", label = "Monte-Carlo Test Statistic")
abline(v = t_0, col = "purple", lwd = 4)
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq, xlab = "Test Statistic", main = "Simulated Test Statistics")
abline(v = t_0, col = "purple", lwd = 4)
df3 = xtabs(~gender_clean + covid_positive, data = data)
df3
chisq.test(df3, simulate.p.value = TRUE, B = 10000)
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq, xlab = "Test Statistic", main = "Simulated Test Statistics")
abline(v = t_0, col = "purple", lwd = 4)
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq, xlab = "Test Statistic", main = "Simulated Test Statistics")
abline(v = t_0, col = "purple", lwd = 4)
set.seed(123)
chisq.test(df3, simulate.p.value = TRUE, B = 10000)
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq, xlab = "Test Statistic", main = "Simulated Test Statistics")
abline(v = t_0, col = "purple", lwd = 4)
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3, correct = FALSE)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq, xlab = "Test Statistic", main = "Simulated Test Statistics")
abline(v = t_0, col = "purple", lwd = 4)
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
t_0 = chisq.test(df3)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
sum(rnd.chisq > t_0)/B
par(cex = 1.8)
hist(rnd.chisq, xlab = "Test Statistic", main = "Simulated Test Statistics")
abline(v = t_0, col = "purple", lwd = 4)
t_0
chisq.test(df3)
chisq.test(df3, simulate.p.value = TRUE)
chisq.test(df3, simulate.p.value = TRUE, B = 10000)
t_0
data %>% select(gender_clean, covid_positive) %>%
ggplot(aes(gender_clean))  +
scale_fill_manual(values = c("darkgreen","darkred")) +
scale_color_manual(values = c("lightpink", "lightblue")) +
geom_bar(aes(fill = covid_positive, colour = gender_clean), position = "dodge", size = 3) +
labs(x = "Gender", y = "Count", fill = "COVID Diagnosis", colour = "Gender")
#| label: tbl-gender-vs-covid
#| tbl-cap: "Table Containing Data from Gender and COVID Diagnosis"
set.seed(123)
df3 = xtabs(~gender_clean + covid_positive, data = data)
knitr::kable(df3)
chisq.test(df3)
set.seed(123)
chisq.test(df3, simulate.p.value = TRUE, B = 10000)
t_0 = chisq.test(df3)$statistic
row_totals = rowSums(df3)
col_totals = colSums(df3)
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
hist(rnd.chisq, xlab = "Test Statistic", main = "Simulated Test Statistics")
abline(v = t_0, col = "purple", lwd = 4)
#extracting the sample test statistic
t_0 = chisq.test(df3)$statistic
#summing the rows and columns
row_totals = rowSums(df3)
col_totals = colSums(df3)
#creating a contingency table
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
#performing a chi-squared test of independence on every simulation
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
#visualising the simulation with a histogram
hist(rnd.chisq, xlab = "Test Statistic", main = "Monte Carlo Simulated Test Statistics", xlim = c(0, 7))
abline(v = t_0, col = "purple", lwd = 4)
citation(ggplot2)
citation('ggplot2')
citation('gridExtra')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(gridExtra)
# loading the data from the tsv file as a tibble
raw_data = readr::read_tsv("DATA2x02-survey.tsv")
#replacing the long column names with the suggested shorter names
new_names = c("timestamp","covid_positive","living_arrangements","height","uni_travel_method","uni_travel_listen","spain_budget","feel_overseas","feel_anxious","study_hrs","read_news","study_load","work","lab_zoom","social_media","gender","sleep_time","wake_time","random_number","steak_preference","dominant_hand","normal_advanced","exercise_hrs","employment_hrs","city","weekly_saving","hourly_plan","weeks_behind","assignment_on_time","used_r_before","team_role","data2x02_hrs","social_media_hrs","uni_year","sport","wam","shoe_size","decade_selection")
colnames(raw_data) = new_names
#dropping rows with no response for our attributes (read_news, normal_advanced, height, gender, covid_positive)
data = raw_data %>% drop_na(read_news, normal_advanced, height, gender, covid_positive)
#cleaning the height data to centimeters: multiply small values (data in meters) by 100, remove data in feet/inches, remove unrealistic heights (taller than 250cm)
data = data %>% dplyr::mutate(
height_clean = readr::parse_number(height),
height_clean = case_when(
height_clean <= 2.5 ~ height_clean * 100,
height_clean <= 9 ~ NA_real_,
height_clean >= 250 ~ NA_real_,
TRUE ~ height_clean
)
) %>% drop_na(height_clean)
#cleaning the gender data: replace common prefixes to "male" or "female", remove invalid values, select values that appear at least 10 times
data = data %>% dplyr::mutate(
gender_clean = tolower(gender),
gender_clean = case_when(
stringr::str_starts(gender_clean, "fe") ~ "female",
stringr::str_starts(gender_clean, "ma") ~ "male",
stringr::str_starts(gender_clean, "wo") ~ "female",
TRUE ~ gender_clean,
)
) %>%
drop_na(gender_clean) %>%
group_by(gender_clean) %>%
filter(n() >= 10)
#selecting the data we need for this question
data1 = table(select(data, normal_advanced, read_news)) %>% data.frame()
#graphing two stacked bar charts (count and proportion) for enrollment and news frequency
p_base = ggplot(data1, aes(x = normal_advanced, y = Freq, fill = read_news)) +
theme_bw(base_size = 12) +
scale_fill_brewer(palette = "Set1") +
labs(fill = "", x = "Enrollment") +
theme(legend.position = "top", plot.title = element_text(hjust = 0.5))
p1 = p_base +
geom_bar(stat = "identity") +
labs(y = "Count") +
ggtitle("News Frequency - Count")
p2 = p_base +
geom_bar(stat = "identity", position = "fill") +
labs(y = "Proportion") +
ggtitle("News Frequency - Proportion")
#displaying both charts side by side in the same grid
gridExtra::grid.arrange(p1, p2, ncol = 2)
#| label: tbl-enrollment-vs-news
#| tbl-cap: "Table Containing Data from Enrollment and News Frequency"
df1 = xtabs(~normal_advanced + read_news, data = data) %>%
as.data.frame.matrix()
knitr::kable(df1)
#traditional chi-squared test without Yate's correction
test1 = chisq.test(df1, correct = FALSE)
#selecting the data that we need for this question
df2 = data %>% select(gender_clean, height_clean)
#graphing a set of box plots illustrating height for female and male students
p1 = ggplot(df2, aes(x = gender_clean, y = height_clean, colour = gender_clean)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter() +
labs(y = "Height (cm)", x = "Gender", colour = "Gender") +
ggtitle("Box Plots") +
theme(plot.title = element_text(hjust = 0.5))
#graphing a set of QQ plots to show normality of height against the theoretical line
p2 = ggplot(df2, aes(sample = height_clean)) +
geom_qq() +
geom_qq_line() +
facet_grid(~gender_clean) +
labs(y = "Sample", x = "Theoretical") +
ggtitle("QQ Plots") +
theme(plot.title = element_text(hjust = 0.5))
#displaying both graphs in one grid
gridExtra::grid.arrange(p1, p2, ncol = 2)
#| label: tbl-gender-vs-height
#| tbl-cap: "Table Containing Data from Gender and Height"
#gathering summary about the data and displaying the table
summary = df2 %>%
group_by(gender_clean) %>%
summarise(Mean = mean(height_clean),
SD = sd(height_clean),
Variance = var(height_clean),
n = n())
colnames(summary)[1] = "Gender (female/male)"
knitr::kable(summary, digits = 1)
#filtering the female and male samples
df2_female = df2 %>% filter(gender_clean == "female")
df2_male = df2 %>% filter(gender_clean == "male")
#two-sample t-test
test2 = t.test(df2_female$height_clean, df2_male$height_clean, alternative = "less", var.equal = TRUE)
#graphing bar chart illustrating the distribution of COVID diagnosis between female and male students
data %>% select(gender_clean, covid_positive) %>%
ggplot(aes(gender_clean))  +
scale_fill_manual(values = c("darkgreen","darkred")) +
scale_color_manual(values = c("lightpink", "lightblue")) +
geom_bar(aes(fill = covid_positive, colour = gender_clean), position = "dodge", size = 3) +
labs(x = "Gender", y = "Count", fill = "COVID Diagnosis", colour = "Gender")
#| label: tbl-gender-vs-covid
#| tbl-cap: "Table Containing Data from Gender and COVID Diagnosis"
#creating frequency table and displaying it
df3 = xtabs(~gender_clean + covid_positive, data = data)
knitr::kable(df3)
#setting the seed to achieve reproductibility
set.seed(123)
#Monte Carlo simulated test for independence
test3 = chisq.test(df3, simulate.p.value = TRUE, B = 10000)
#extracting the sample test statistic
t_0 = chisq.test(df3)$statistic
#summing the rows and columns
row_totals = rowSums(df3)
col_totals = colSums(df3)
#creating a contingency table
B = 10000
x_list = r2dtable(n = B,
r = row_totals,
c = col_totals)
rnd.chisq = numeric(B)
#performing a chi-squared test of independence on every simulation
for (i in 1:B){
rnd.chisq[i] = chisq.test(x_list[[i]])$statistic
}
#visualising the simulation with a histogram
hist(rnd.chisq, xlab = "Test Statistic", main = "Monte Carlo Simulated Test Statistics", xlim = c(0, 7))
abline(v = t_0, col = "purple", lwd = 5)
test1
test2
test3
t_0
