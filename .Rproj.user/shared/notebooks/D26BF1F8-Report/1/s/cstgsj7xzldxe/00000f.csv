"0","# loading the data from the tsv file as a tibble"
"0","raw_data = readr::read_tsv(""DATA2x02-survey.tsv"") "
"0",""
"0","#replacing the long column names with the suggested shorter names"
"0","new_names = c(""timestamp"",""covid_positive"",""living_arrangements"",""height"",""uni_travel_method"",""uni_travel_listen"",""spain_budget"",""feel_overseas"",""feel_anxious"",""study_hrs"",""read_news"",""study_load"",""work"",""lab_zoom"",""social_media"",""gender"",""sleep_time"",""wake_time"",""random_number"",""steak_preference"",""dominant_hand"",""normal_advanced"",""exercise_hrs"",""employment_hrs"",""city"",""weekly_saving"",""hourly_plan"",""weeks_behind"",""assignment_on_time"",""used_r_before"",""team_role"",""data2x02_hrs"",""social_media_hrs"",""uni_year"",""sport"",""wam"",""shoe_size"",""decade_selection"")"
"0","colnames(raw_data) = new_names"
"0",""
"0","#dropping rows with no response for our attributes (read_news, normal_advanced, height, gender, covid_positive)"
"0","data = raw_data %>% drop_na(read_news, normal_advanced, height, gender, covid_positive)"
"0",""
"0","#cleaning the height data to centimeters: multiply small values (data in meters) by 100, remove data in feet/inches, remove unrealistic heights (taller than 250cm)"
"0","data = data %>% dplyr::mutate("
"0","  height_clean = readr::parse_number(height),"
"0","  height_clean = case_when("
"0","    height_clean <= 2.5 ~ height_clean * 100,"
"0","    height_clean <= 9 ~ NA_real_,"
"0","    height_clean >= 250 ~ NA_real_,"
"0","    TRUE ~ height_clean"
"0","  )"
"0",") %>% drop_na(height_clean)"
"0",""
"0","#cleaning the gender data: replace common prefixes to ""male"" or ""female"", remove invalid values, select values that appear at least 10 times"
"0","data = data %>% dplyr::mutate("
"0","  gender_clean = tolower(gender),"
"0","  gender_clean = case_when("
"0","    stringr::str_starts(gender_clean, ""fe"") ~ ""female"","
"0","    stringr::str_starts(gender_clean, ""ma"") ~ ""male"","
"0","    stringr::str_starts(gender_clean, ""wo"") ~ ""female"","
"0","    TRUE ~ gender_clean,"
"0","  )"
"0",") %>% "
"0","  drop_na(gender_clean) %>%"
"0","  group_by(gender_clean) %>%"
"0","  filter(n() >= 10)"
